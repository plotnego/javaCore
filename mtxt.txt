In the global context, a variable declared using var is added as a non-configurable
property of the global object.
This means its property descriptor cannot be
changed and it cannot be deleted using delete.
The corresponding name is also added
to a list on the internal [[VarNames]] slot on the global
environment record (which forms part of the global lexical environment).
The list of names in [[var]] enables the runtime to distinguish between
global variables and straightforward properties on the global object.
The property created on the global object for global variables,
is set to be non-configurable because the identifier is to be treated as a variable,
rather than a straightforward property of the global object.
JavaScript var, has automatic memory management,
and it would make no sense to be able to use the delete operator on a global variable.